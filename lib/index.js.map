{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { Plugin } from \"rollup\";\nimport path from \"path\";\nimport installNodeFetch from \"@hattip/polyfills/node-fetch\";\n\nexport type ResolveIdFallback = (\n    specifier: string,\n    importer?: string\n) => string | void;\n\nfunction isHttpProtocol(id: string | undefined | null) {\n    return id?.startsWith(\"http://\") || id?.startsWith(\"https://\");\n}\n\nconst DEBUG = false;\nconst log = (...args: any) => DEBUG && console.log(...args);\n\ntype HttpResolveOptions = {\n    cache?: any;\n    fetcher?: (url: string) => Promise<string>;\n    onRequest?: (url: string) => void;\n    onUseCache?: (url: string) => void;\n    resolveIdFallback?: ResolveIdFallback;\n};\nconst defaultCache = new Map();\nexport const httpResolve = function httpResolve_({\n    cache = defaultCache,\n    onRequest,\n    onUseCache,\n    fetcher,\n    resolveIdFallback,\n}: HttpResolveOptions = {}) {\n    installNodeFetch();\n    return {\n        name: \"rollup-plugin-http-resolve\",\n        async resolveId(id: string, importer: string) {\n            if (/^https?:\\/\\//.test(id)) return id;\n            log(\"[http-resolve:resolveId:enter]\", id, \"from\", importer);\n            // on network resolve\n            if (importer && isHttpProtocol(importer)) {\n                if (id.startsWith(\"https://\")) {\n                    log(\"[http-reslove:end] return with https\", id);\n                    return id;\n                }\n                const { pathname, protocol, host } = new URL(importer);\n                // for skypack\n                if (id.startsWith(\"/\")) {\n                    // pattern: /_/ in https://cdn.skypack.dev\n                    log(\n                        \"[http-reslove:end] return with host root\",\n                        `${protocol}//${host}${id}`\n                    );\n                    return `${protocol}//${host}${id}`;\n                } else if (id.startsWith(\".\")) {\n                    // pattern: ./xxx/yyy in https://esm.sh\n                    const resolvedPathname = path.join(\n                        path.dirname(pathname),\n                        id\n                    );\n                    const newId = `${protocol}//${host}${resolvedPathname}`;\n                    log(\"[http-resolve:end] return with relativePath\", newId);\n                    return newId;\n                }\n            } else if (resolveIdFallback) {\n                const fallbacked = resolveIdFallback(id, importer);\n                log(\"[http-resolve:end] use fallback to\", id, \"=>\", fallbacked);\n                if (fallbacked) {\n                    return fallbacked;\n                }\n            }\n        },\n        async load(id: string) {\n            log(\"[http-resolve:load]\", id);\n            if (id === null) {\n                return;\n            }\n            if (isHttpProtocol(id)) {\n                const cached = await cache.get(id);\n                if (cached) {\n                    onUseCache?.(id);\n                    return cached;\n                }\n                onRequest?.(id);\n                if (fetcher) {\n                    const code = await fetcher(id);\n                    await cache.set(id, code);\n                    return code;\n                } else {\n                    const res = await fetch(id);\n                    if (!res.ok) {\n                        throw res.statusText;\n                    }\n                    const code = await res.text();\n                    await cache.set(id, code);\n                    return code;\n                }\n            }\n        },\n    } as Plugin;\n};\n"],"names":["isHttpProtocol","id","defaultCache","httpResolve","cache","onRequest","onUseCache","fetcher","resolveIdFallback","installNodeFetch","importer","pathname","protocol","host","resolvedPathname","path","fallbacked","cached","code","res"],"mappings":"8NASA,SAASA,EAAeC,EAA+B,CACnD,OAAOA,GAAI,WAAW,SAAS,GAAKA,GAAI,WAAW,UAAU,CACjE,CAEA,MAUMC,EAAe,IAAI,IACZC,EAAc,SAAsB,CAC7C,MAAAC,EAAQF,EACR,UAAAG,EACA,WAAAC,EACA,QAAAC,EACA,kBAAAC,CACJ,EAAwB,CAAA,EAAI,CACxB,OAAAC,UAAiB,EACV,CACH,KAAM,6BACN,MAAM,UAAUR,EAAYS,EAAkB,CAC1C,GAAI,eAAe,KAAKT,CAAE,EAAG,OAAOA,EAGpC,GAAIS,GAAYV,EAAeU,CAAQ,EAAG,CACtC,GAAIT,EAAG,WAAW,UAAU,EACxB,OACOA,EAEX,KAAM,CAAE,SAAAU,EAAU,SAAAC,EAAU,KAAAC,CAAK,EAAI,IAAI,IAAIH,CAAQ,EAErD,GAAIT,EAAG,WAAW,GAAG,EAEjB,MAIO,GAAGW,MAAaC,IAAOZ,IAC3B,GAAIA,EAAG,WAAW,GAAG,EAAG,CAE3B,MAAMa,EAAmBC,UAAK,KAC1BA,EAAK,QAAA,QAAQJ,CAAQ,EACrBV,CACJ,EAEA,MADc,GAAGW,MAAaC,IAAOC,GAGzC,CACJ,SAAWN,EAAmB,CAC1B,MAAMQ,EAAaR,EAAkBP,EAAIS,CAAQ,EAEjD,GAAIM,EACA,OAAOA,CAEf,CACJ,EACA,MAAM,KAAKf,EAAY,CAEnB,GAAIA,IAAO,MAGPD,EAAeC,CAAE,EAAG,CACpB,MAAMgB,EAAS,MAAMb,EAAM,IAAIH,CAAE,EACjC,GAAIgB,EACA,OAAAX,IAAaL,CAAE,EACRgB,EAGX,GADAZ,IAAYJ,CAAE,EACVM,EAAS,CACT,MAAMW,EAAO,MAAMX,EAAQN,CAAE,EAC7B,OAAMG,MAAAA,EAAM,IAAIH,EAAIiB,CAAI,EACjBA,CACX,KAAO,CACH,MAAMC,EAAM,MAAM,MAAMlB,CAAE,EAC1B,GAAI,CAACkB,EAAI,GACL,MAAMA,EAAI,WAEd,MAAMD,EAAO,MAAMC,EAAI,OACvB,OAAMf,MAAAA,EAAM,IAAIH,EAAIiB,CAAI,EACjBA,CACX,CACJ,CACJ,CACJ,CACJ"}