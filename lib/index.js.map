{"version":3,"file":"index.js","sources":["../src/fileCache.ts","../src/index.ts"],"sourcesContent":["import { CacheType } from \"./CacheType\";\nimport { createHash } from \"node:crypto\";\nimport fse from \"fs-extra\";\nimport { homedir } from \"node:os\";\nimport path from \"node:path\";\n\nexport class fileCache implements CacheType {\n    #cacheFolder = path.join(homedir(), \"cache\", \"fetch\");\n\n    #getCachePath(key: string) {\n        const hash = createHash(\"sha512\");\n        hash.update(key);\n        const filename = hash.digest(\"base64\");\n        return path.join(this.#cacheFolder, filename);\n    }\n    async set(key: string, value: string) {\n        const filepath = this.#getCachePath(key);\n        await fse.ensureFile(filepath);\n        return await fse.writeFile(filepath, value, { encoding: \"utf-8\" });\n    }\n    async get(key: string) {\n        const filepath = this.#getCachePath(key);\n        if (!fse.exists(filepath)) {\n            return;\n        }\n        await fse.ensureFile(filepath);\n\n        return await fse.readFile(filepath, \"utf-8\");\n    }\n}\n","import type { CacheType } from \"./CacheType\";\nimport { Plugin } from \"rollup\";\nimport { fileCache } from \"./fileCache\";\nimport installNodeFetch from \"@hattip/polyfills/node-fetch\";\nimport path from \"path\";\n\nexport type ResolveIdFallback = (\n    specifier: string,\n    importer?: string\n) => string | void;\n\nfunction isHttpProtocol(id: string | undefined | null) {\n    return id?.startsWith(\"http://\") || id?.startsWith(\"https://\");\n}\n\nconst DEBUG = false;\nconst log = (...args: any) => DEBUG && console.log(...args);\nexport type HttpResolveOptions = {\n    cache?: CacheType;\n    fetcher?: (url: string) => Promise<string>;\n    onRequest?: (url: string) => void;\n    onUseCache?: (url: string) => void;\n    resolveIdFallback?: ResolveIdFallback;\n};\nexport const defaultCache = new Map();\nexport const httpResolve = function httpResolve_({\n    cache = defaultCache,\n    onRequest,\n    onUseCache,\n    fetcher,\n    resolveIdFallback,\n}: HttpResolveOptions = {}) {\n    installNodeFetch();\n    return {\n        name: \"rollup-plugin-http-resolve\",\n        async resolveId(id: string, importer: string) {\n            if (/^https?:\\/\\//.test(id)) return id;\n            log(\"[http-resolve:resolveId:enter]\", id, \"from\", importer);\n            // on network resolve\n            if (importer && isHttpProtocol(importer)) {\n                if (id.startsWith(\"https://\")) {\n                    log(\"[http-reslove:end] return with https\", id);\n                    return id;\n                }\n                const { pathname, protocol, host } = new URL(importer);\n                // for skypack\n                if (id.startsWith(\"/\")) {\n                    // pattern: /_/ in https://cdn.skypack.dev\n                    log(\n                        \"[http-reslove:end] return with host root\",\n                        `${protocol}//${host}${id}`\n                    );\n                    return `${protocol}//${host}${id}`;\n                } else if (id.startsWith(\".\")) {\n                    // pattern: ./xxx/yyy in https://esm.sh\n                    const resolvedPathname = path.join(\n                        path.dirname(pathname),\n                        id\n                    );\n                    const newId = `${protocol}//${host}${resolvedPathname}`;\n                    log(\"[http-resolve:end] return with relativePath\", newId);\n                    return newId;\n                }\n            } else if (resolveIdFallback) {\n                const fallbacked = resolveIdFallback(id, importer);\n                log(\"[http-resolve:end] use fallback to\", id, \"=>\", fallbacked);\n                if (fallbacked) {\n                    return fallbacked;\n                }\n            }\n        },\n        async load(id: string) {\n            log(\"[http-resolve:load]\", id);\n            if (id === null) {\n                return;\n            }\n            if (isHttpProtocol(id)) {\n                const cached = await cache.get(id);\n                if (cached) {\n                    onUseCache?.(id);\n                    return cached;\n                }\n                onRequest?.(id);\n                if (fetcher) {\n                    const code = await fetcher(id);\n                    await cache.set(id, code);\n                    return code;\n                } else {\n                    const res = await fetch(id, {\n                        headers: {\n                            \"User-Agent\":\n                                \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.54\",\n                        },\n                    });\n                    if (!res.ok) {\n                        throw res.statusText;\n                    }\n                    const code = await res.text();\n                    await cache.set(id, code);\n                    return code;\n                }\n            }\n        },\n    } as Plugin;\n};\nexport { CacheType, fileCache };\n"],"names":["fileCache","#cacheFolder","path","homedir","#getCachePath","key","hash","createHash","filename","value","filepath","fse","isHttpProtocol","id","defaultCache","httpResolve","cache","onRequest","onUseCache","fetcher","resolveIdFallback","installNodeFetch","importer","pathname","protocol","host","resolvedPathname","fallbacked","cached","code","res"],"mappings":"wKAMO,MAAMA,CAA+B,CACxCC,GAAeC,EAAK,KAAKC,EAAAA,QAAW,EAAA,QAAS,OAAO,EAEpDC,GAAcC,EAAa,CACvB,MAAMC,EAAOC,EAAAA,WAAW,QAAQ,EAChCD,EAAK,OAAOD,CAAG,EACf,MAAMG,EAAWF,EAAK,OAAO,QAAQ,EACrC,OAAOJ,EAAK,KAAK,KAAKD,GAAcO,CAAQ,CAChD,CACA,MAAM,IAAIH,EAAaI,EAAe,CAClC,MAAMC,EAAW,KAAKN,GAAcC,CAAG,EACvC,OAAA,MAAMM,EAAI,WAAWD,CAAQ,EACtB,MAAMC,EAAI,UAAUD,EAAUD,EAAO,CAAE,SAAU,OAAQ,CAAC,CACrE,CACA,MAAM,IAAIJ,EAAa,CACnB,MAAMK,EAAW,KAAKN,GAAcC,CAAG,EACvC,GAAKM,EAAI,OAAOD,CAAQ,EAGxB,OAAMC,MAAAA,EAAI,WAAWD,CAAQ,EAEtB,MAAMC,EAAI,SAASD,EAAU,OAAO,CAC/C,CACJ,CClBA,SAASE,EAAeC,EAA+B,CACnD,OAAOA,GAAI,WAAW,SAAS,GAAKA,GAAI,WAAW,UAAU,CACjE,CAWa,MAAAC,EAAe,IAAI,IACnBC,EAAc,SAAsB,CAC7C,MAAAC,EAAQF,EACR,UAAAG,EACA,WAAAC,EACA,QAAAC,EACA,kBAAAC,CACJ,EAAwB,GAAI,CACxB,OAAAC,EAAAA,EACO,CACH,KAAM,6BACN,MAAM,UAAUR,EAAYS,EAAkB,CAC1C,GAAI,eAAe,KAAKT,CAAE,EAAG,OAAOA,EAGpC,GAAIS,GAAYV,EAAeU,CAAQ,EAAG,CACtC,GAAIT,EAAG,WAAW,UAAU,EACxB,OACOA,EAEX,KAAM,CAAE,SAAAU,EAAU,SAAAC,EAAU,KAAAC,CAAK,EAAI,IAAI,IAAIH,CAAQ,EAErD,GAAIT,EAAG,WAAW,GAAG,EAEjB,MAIO,GAAGW,MAAaC,IAAOZ,IAC3B,GAAIA,EAAG,WAAW,GAAG,EAAG,CAE3B,MAAMa,EAAmBxB,EAAK,KAC1BA,EAAK,QAAQqB,CAAQ,EACrBV,CACJ,EAEA,MADc,GAAGW,MAAaC,IAAOC,aAIlCN,EAAmB,CAC1B,MAAMO,EAAaP,EAAkBP,EAAIS,CAAQ,EAEjD,GAAIK,EACA,OAAOA,EAGnB,EACA,MAAM,KAAKd,EAAY,CAEnB,GAAIA,IAAO,MAGPD,EAAeC,CAAE,EAAG,CACpB,MAAMe,EAAS,MAAMZ,EAAM,IAAIH,CAAE,EACjC,GAAIe,EACA,OAAAV,IAAaL,CAAE,EACRe,EAGX,GADAX,IAAYJ,CAAE,EACVM,EAAS,CACT,MAAMU,EAAO,MAAMV,EAAQN,CAAE,EAC7B,OAAA,MAAMG,EAAM,IAAIH,EAAIgB,CAAI,EACjBA,MACJ,CACH,MAAMC,EAAM,MAAM,MAAMjB,EAAI,CACxB,QAAS,CACL,aACI,mIACR,CACJ,CAAC,EACD,GAAI,CAACiB,EAAI,GACL,MAAMA,EAAI,WAEd,MAAMD,EAAO,MAAMC,EAAI,KAAK,EAC5B,OAAMd,MAAAA,EAAM,IAAIH,EAAIgB,CAAI,EACjBA,GAGnB,CACJ,CACJ"}